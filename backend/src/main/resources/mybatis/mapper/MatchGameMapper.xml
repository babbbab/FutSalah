<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ido.arduino.mapper.MatchGameMapper">



	<!-- 검색 조건에 모두 맞는 내용 찾기 -->
	<select id="alloption" resultType="match">
		select m.*,t.name as hometeam,
		t.profileURL, l.sido, l.gu, c.name from
		matching m
		left outer join court c on
		m.courtID = c.courtID
		left outer join location l on m.locationID =
		l.locationID
		left outer join team t on m.homeTeamID = t.teamID
		where
		m.state = 0
		<if test="locationID != 999">and l.locationID=#{locationID}</if>
		<if test="time != 25">and m.time=#{time}</if>
		<if test="isBooked != 9">and m.isBooked=#{isBooked}</if>
		<if test="formCode != 99">and m.formCode=#{formCode}</if>
		<choose>
			<when test="date == null">
					<![CDATA[ and CURRENT_TIMESTAMP() < TIMESTAMP (DATE_ADD(m.date, INTERVAL m.time HOUR)) 	]]>
			</when>
			<when test="date != null">
				and m.date = #{date}
			</when>
		</choose>
	</select>



	<!-- 검색 조건중 위치, 날짜 맞는 내용 찾기 -->

	<select id="simpleoption" resultType="match">
		select m.*,t.name as
		hometeam,
		t.profileURL,l.gu, c.name from
		matching m
		left outer join court
		c on
		m.courtID = c.courtID
		left outer join location l on m.locationID =
		l.locationID
		left outer join team t on m.homeTeamID = t.teamID
		where
		l.locationID = #{locationID}
		and m.date LIKE CONCAT('%',#{date},'%')


	</select>



	<!-- 검색한 조건 없으면 매칭 등록 -->
	<insert id="insertmatch" parameterType="match">
		insert into
		matching(homeTeamID,locationID,date,time,formCode,state,
		isBooked
		<if test="isBooked==1">,courtID</if>
		)
		values
		(#{homeTeamID},#{locationID},#{date},#{time},#{formCode},0,#{isBooked}
		<if test="isBooked==1"> ,#{courtID}</if>)

	</insert>




	<!-- 나에게 온 매칭 정보( 내가 등록한 매칭 정보) -->
	<select id="comematch" resultType="match">
		select m.*, t.name as
		hometeam,t.profileURL, l.sido, l.gu, c.name
		from matching m
		left outer
		join court c on m.courtID = c.courtID
		left outer join location l on
		m.locationID = l.locationID
		left outer join team t on m.homeTeamID
		=t.teamID
		inner join userteamconn ut on t.teamID = ut.teamID
		inner join
		user u on ut.userID = u.userID
		where m.state = 0 and u.userID
		=#{userID};
	</select>



	<!-- 내가 매칭 신청 요청한 매칭 정보 -->

	<select id="requestmatch" resultType="match">
		select m.*,t.name as
		awayteam,t.profileURL, l.sido, l.gu, c.name, t2.name as hometeam from
		waiting w
		left outer join team t on w.awayTeamID=t.teamID
		inner join
		userteamconn ut on t.teamID = ut.teamID
		inner join user u on ut.userID
		= u.userID
		inner join matching m on w.matchID = m.matchID
		left outer
		join location l on m.locationID = l.locationID
		inner join team t2 on
		m.homeTeamID = t2.teamID
		left outer join court c on m.courtID =
		c.courtID
		where m.state = 0 and u.userID =#{userID};
	</select>

	<!--내가 등록한 매칭 삭제 -->

	<delete id="deletematch" parameterType="int">
		delete from matching
		where matchID = #{matchID}
	</delete>

	<!-- 내가 등록한 매칭을 삭제할 때 웨이팅 있는 매칭도 같이 삭제 -->
	<delete id="deletewaitmatch" parameterType="int">
		delete from waiting
		where matchID = #{matchID}
	</delete>

	<!-- 나에게 온 매칭 대기 리스트 -->
	<select id="waitmatch" resultType="wait">
		select t.* from waiting w,
		team t
		where w.awayTeamID = t.teamID and
		w.matchID= #{matchID};
	</select>


	<!--내가 요청한 매칭 삭제 -->
	<delete id="requestdelete" parameterType="int">
		delete from waiting
		where awayTeamID = #{teamID} and matchID =#{matchID}
	</delete>

	<!-- 예정 된 경기 일정 -->

	<select id="schedule" resultType="match">
	<![CDATA[
		select distinct m.matchID,
		m.homeTeamID,
		m.awayTeamID,m.date,m.time,m.isBooked,m.locationID,m.state,m.courtID,m.formCode,
		t.name as hometeam, t.profileURL,l.sido, l.gu, c.name, t2.name as
		awayteam, t2.profileURL as awayprofileURL
		from matching m
		left outer
		join court c on m.courtID = c.courtID
		left outer
		join location l on
		m.locationID = l.locationID
		left outer join team t
		on
		m.homeTeamID=t.teamID
		left outer join team t2 on
		m.awayTeamID=t2.teamID
		inner join userteamconn ut on t2.teamID = ut.teamID or t.teamID=
		ut.teamID
		inner join user u on ut.userID = u.userID
		where m.state = 1
		and u.userID=#{userID}
		and CURRENT_TIMESTAMP() < TIMESTAMP (DATE_ADD(m.date, INTERVAL m.time HOUR))
   		]]>
	</select>



</mapper>